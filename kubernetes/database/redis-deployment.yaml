apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: nexus-security
  labels:
    app: redis
    component: cache
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command:
        - redis-server
        - /etc/redis/redis.conf
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -a $REDIS_PASSWORD ping"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -a $REDIS_PASSWORD ping"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 1000
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      serviceAccountName: redis-sa
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: nexus-security
  labels:
    app: redis
    component: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "6379"
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: redis

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-sa
  namespace: nexus-security
  labels:
    app: redis
    component: cache

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: nexus-security
  labels:
    app: redis
    component: cache
data:
  redis.conf: |
    # Redis configuration for Nexus-Security
    bind 0.0.0.0
    port 6379
    
    # Authentication
    requirepass ${REDIS_PASSWORD}
    
    # Memory management
    maxmemory 1.5gb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # AOF persistence
    appendonly yes
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Security
    protected-mode yes
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command KEYS ""
    rename-command CONFIG "CONFIG_b835c8b6d1f615c4c9c3e8f5a2b9d8c7"
    
    # Logging
    loglevel notice
    logfile ""
    
    # Performance
    tcp-keepalive 300
    tcp-backlog 511
    timeout 0
    
    # Pub/Sub for real-time notifications
    notify-keyspace-events Ex
    
    # Database count
    databases 16
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Client connections
    maxclients 10000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: nexus-security
  labels:
    app: redis-sentinel
    component: cache
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
        component: cache
    spec:
      containers:
      - name: redis-sentinel
        image: redis:7-alpine
        command:
        - redis-sentinel
        - /etc/redis-sentinel/sentinel.conf
        ports:
        - containerPort: 26379
          name: sentinel
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: sentinel-config
          mountPath: /etc/redis-sentinel
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -p 26379 ping"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -p 26379 ping"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: sentinel-config
        configMap:
          name: redis-sentinel-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  namespace: nexus-security
  labels:
    app: redis-sentinel
    component: cache
spec:
  type: ClusterIP
  ports:
  - name: sentinel
    port: 26379
    targetPort: 26379
    protocol: TCP
  selector:
    app: redis-sentinel

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: nexus-security
  labels:
    app: redis-sentinel
    component: cache
data:
  sentinel.conf: |
    # Redis Sentinel configuration for high availability
    bind 0.0.0.0
    port 26379
    
    # Monitor Redis master
    sentinel monitor nexus-redis redis-service.nexus-security.svc.cluster.local 6379 2
    sentinel auth-pass nexus-redis ${REDIS_PASSWORD}
    
    # Failover configuration
    sentinel down-after-milliseconds nexus-redis 30000
    sentinel parallel-syncs nexus-redis 1
    sentinel failover-timeout nexus-redis 180000
    
    # Security
    requirepass ${REDIS_PASSWORD}
    
    # Logging
    loglevel notice
    logfile ""